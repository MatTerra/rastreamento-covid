-- MySQL Script generated by MySQL Workbench
-- s√°b 21 nov 2020 10:10:33
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
-- SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
-- SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema rastreamento_covid
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS rastreamento_covid ;

-- -----------------------------------------------------
-- Schema rastreamento_covid
-- -----------------------------------------------------
-- CREATE SCHEMA IF NOT EXISTS rastreamento_covid ;
-- USE rastreamento_covid ;

-- -----------------------------------------------------
-- Table usuario
-- -----------------------------------------------------
DROP TABLE IF EXISTS usuario ;

CREATE TABLE IF NOT EXISTS usuario (
  usuario_id_ CHAR(32) NOT NULL,
  usuario_ord SERIAL UNIQUE NOT NULL,
  usuario_salt CHAR(32) NOT NULL,
  usuario_password CHAR(88) NOT NULL,
  usuario_primeiro_nome VARCHAR(45) NOT NULL,
  usuario_ultimo_nome VARCHAR(45) NOT NULL,
  usuario_consentimento BOOLEAN NOT NULL DEFAULT FALSE,
  usuario_data_nascimento DATE NULL,
  PRIMARY KEY (usuario_id_));


-- -----------------------------------------------------
-- Table email
-- -----------------------------------------------------
DROP TABLE IF EXISTS email ;

CREATE TABLE IF NOT EXISTS email (
  email_id_ CHAR(32) NOT NULL,
  email_email VARCHAR(321) UNIQUE NOT NULL,
  email_usuario_id_ CHAR(32) NOT NULL,
  email_primario BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (email_id_),
  CONSTRAINT fk_email_usuario
    FOREIGN KEY (email_usuario_id_)
    REFERENCES usuario (usuario_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table telefone
-- -----------------------------------------------------
DROP TABLE IF EXISTS telefone ;

CREATE TABLE IF NOT EXISTS telefone (
  telefone_id_ CHAR(32) NOT NULL,
  telefone_telefone CHAR(9) NOT NULL,
  telefone_usuario_id_ CHAR(32) NOT NULL,
  PRIMARY KEY (telefone_id_),
  CONSTRAINT fk_telefone_usuario
    FOREIGN KEY (telefone_usuario_id_)
    REFERENCES usuario (usuario_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table local
-- -----------------------------------------------------
DROP TABLE IF EXISTS local ;

CREATE TABLE IF NOT EXISTS local (
  local_id_ CHAR(32) NOT NULL,
  local_ord SERIAL UNIQUE NOT NULL,
  local_nome VARCHAR(45) NOT NULL,
  local_longitude VARCHAR(45) NOT NULL,
  local_latitude VARCHAR(45) NOT NULL,
  PRIMARY KEY (local_id_));


-- -----------------------------------------------------
-- Table checkin
-- -----------------------------------------------------
DROP TABLE IF EXISTS checkin ;

CREATE TABLE IF NOT EXISTS checkin (
  checkin_id_ CHAR(32) NOT NULL,
  checkin_id_usuario CHAR(32) NOT NULL,
  checkin_local_id_ CHAR(32) NOT NULL,
  checkin_risco INT NOT NULL DEFAULT 0,
  checkin_inicio TIMESTAMP NOT NULL,
  checkin_final TIMESTAMP NULL,
  PRIMARY KEY (checkin_id_),
  CONSTRAINT fk_checkin_local
    FOREIGN KEY (checkin_local_id_)
    REFERENCES local (local_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_checkin_usuario
    FOREIGN KEY (checkin_id_usuario)
    REFERENCES usuario (usuario_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table notificacao
-- -----------------------------------------------------
DROP TABLE IF EXISTS notificacao ;

CREATE TABLE IF NOT EXISTS notificacao (
  notificacao_checkin_id_ CHAR(32) NOT NULL,
  notificacao_recebida BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (notificacao_checkin_id_),
  CONSTRAINT fk_notificacao_checkin
    FOREIGN KEY (notificacao_checkin_id_)
    REFERENCES checkin (checkin_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table sintoma
-- -----------------------------------------------------
DROP TABLE IF EXISTS sintoma ;

CREATE TABLE IF NOT EXISTS sintoma (
  sintoma_id_ CHAR(32) NOT NULL,
  sintoma_descricao VARCHAR(45) NOT NULL,
  sintoma_risco INT NOT NULL,
  PRIMARY KEY (sintoma_id_))
;


-- -----------------------------------------------------
-- Table caso_sintoma
-- -----------------------------------------------------
DROP TABLE IF EXISTS caso_sintoma ;

CREATE TABLE IF NOT EXISTS caso_sintoma (
  caso_sintoma_id_ CHAR(32) NOT NULL,
  caso_sintoma_usuario_id_ CHAR(32) NOT NULL,
  caso_sintoma_sintoma_id_ CHAR(32) NOT NULL,
  caso_sintoma_inicio TIMESTAMP NOT NULL,
  caso_sintoma_final TIMESTAMP NULL,
  PRIMARY KEY (caso_sintoma_id_),
  CONSTRAINT fk_caso_sintoma_sintoma
    FOREIGN KEY (caso_sintoma_sintoma_id_)
    REFERENCES sintoma (sintoma_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_caso_sintoma_usuario
    FOREIGN KEY (caso_sintoma_usuario_id_)
    REFERENCES usuario (usuario_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table medicamento
-- -----------------------------------------------------
DROP TABLE IF EXISTS medicamento ;

CREATE TABLE IF NOT EXISTS medicamento (
  medicamento_id_ CHAR(32) NOT NULL,
  medicamento_nome VARCHAR(45) NOT NULL,
  PRIMARY KEY (medicamento_id_))
;


-- -----------------------------------------------------
-- Table medico
-- -----------------------------------------------------
DROP TABLE IF EXISTS medico ;

CREATE TABLE IF NOT EXISTS medico (
  medico_id_ CHAR(32) NOT NULL,
  medico_nome VARCHAR(45) NOT NULL,
  PRIMARY KEY (medico_id_))
;


-- -----------------------------------------------------
-- Table tratamento
-- -----------------------------------------------------
DROP TABLE IF EXISTS tratamento ;

CREATE TABLE IF NOT EXISTS tratamento (
  tratamento_medicamento_id_ CHAR(32) NOT NULL,
  tratamento_medico_id_ CHAR(32) NOT NULL,
  tratamento_usuario_id_ CHAR(32) NOT NULL,
  tratamento_posologia VARCHAR(45) NOT NULL,
  PRIMARY KEY (tratamento_medicamento_id_, tratamento_medico_id_, tratamento_usuario_id_),
  CONSTRAINT fk_medicamento_has_medico_medicamento1
    FOREIGN KEY (tratamento_medicamento_id_)
    REFERENCES medicamento (medicamento_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_medicamento_has_medico_medico1
    FOREIGN KEY (tratamento_medico_id_)
    REFERENCES medico (medico_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_tratamento_usuario
    FOREIGN KEY (tratamento_usuario_id_)
    REFERENCES usuario (usuario_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table hospital
-- -----------------------------------------------------
DROP TABLE IF EXISTS hospital ;

CREATE TABLE IF NOT EXISTS hospital (
  hospital_id_ CHAR(32) NOT NULL,
  hospital_local VARCHAR(256) NOT NULL,
  hospital_nome VARCHAR(45) NOT NULL,
  PRIMARY KEY (hospital_id_))
;


-- -----------------------------------------------------
-- Table contratacao
-- -----------------------------------------------------
DROP TABLE IF EXISTS contratacao ;

CREATE TABLE IF NOT EXISTS contratacao (
  contratacao_medico_id_ CHAR(32) NOT NULL,
  contratacao_hospital_id_ CHAR(32) NOT NULL,
  PRIMARY KEY (contratacao_medico_id_, contratacao_hospital_id_),
  CONSTRAINT fk_medico_has_Hospital_medico1
    FOREIGN KEY (contratacao_medico_id_)
    REFERENCES medico (medico_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_medico_has_Hospital_Hospital1
    FOREIGN KEY (contratacao_hospital_id_)
    REFERENCES hospital (hospital_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table emissor
-- -----------------------------------------------------
DROP TABLE IF EXISTS emissor ;

CREATE TABLE IF NOT EXISTS emissor (
  emissor_id_ CHAR(32) NOT NULL,
  emissor_nome VARCHAR(45) NOT NULL,
  emissor_local VARCHAR(256) NOT NULL,
  PRIMARY KEY (emissor_id_))
;


-- -----------------------------------------------------
-- Table diagnostico
-- -----------------------------------------------------
DROP TABLE IF EXISTS diagnostico ;

CREATE TABLE IF NOT EXISTS diagnostico (
  diagnostico_usuario_id_ CHAR(32) NOT NULL,
  diagnostico_emissor_id_ CHAR(32) NOT NULL,
  diagnostico_data_exame DATE NOT NULL,
  diagnostico_data_inicio_sintomas DATE NOT NULL,
  diagnostico_data_fim_sintomas DATE NULL,
  diagnostico_data_recuperacao DATE NULL,
  PRIMARY KEY (diagnostico_usuario_id_, diagnostico_emissor_id_),
  CONSTRAINT fk_diagnostico_emissor1
    FOREIGN KEY (diagnostico_emissor_id_)
    REFERENCES emissor (emissor_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_diagnostico_usuario
    FOREIGN KEY (diagnostico_usuario_id_)
    REFERENCES usuario (usuario_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table internacao
-- -----------------------------------------------------
DROP TABLE IF EXISTS internacao ;

CREATE TABLE IF NOT EXISTS internacao (
  internacao_hospital_id_ CHAR(32) NOT NULL,
  internacao_usuario_id_ CHAR(32) NOT NULL,
  internacao_data_inicio DATE NOT NULL,
  internacao_uti BOOLEAN NOT NULL DEFAULT FALSE,
  internacao_alta DATE NULL,
  PRIMARY KEY (internacao_hospital_id_, internacao_data_inicio, internacao_usuario_id_),
  CONSTRAINT fk_internacao_hospital
    FOREIGN KEY (internacao_hospital_id_)
    REFERENCES hospital (hospital_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_internacao_usuario
    FOREIGN KEY (internacao_usuario_id_)
    REFERENCES usuario (usuario_id_)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
